version: '3' # docker-compose 버전 지정
services: # docker-compose의 경우 docker 컨테이너로 수행될 서비스들은 services 하위에 기술
  zookeeper-1: # 서비스 이름. service 하위에 작성하면 해당 이름으로 동작
    image: wurstmeister/zookeeper # 도커 이미지
    hostname: zookeeper1
    container_name: zookeeper1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_CLIENT_PORT: 12181
      ZOOKEEPER_DATA_DIR: /data/zookeeper/data
      ZOOKEEPER_SERVERS: zookeeper1:22888:23888;zookeeper2:32888:33888;zookeeper3:42888:43888
    ports:
      - "12181:12181"
      - "22888:22888"
      - "23888:23888"

    volumes:
      - ./test/zookeeper/data/1:/zookeeper/data
  zookeeper-2: # 서비스 이름. service 하위에 작성하면 해당 이름으로 동작
    image: wurstmeister/zookeeper # 도커 이미지
    hostname: zookeeper2
    container_name: zookeeper2
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_DATA_DIR: /data/zookeeper/data
      ZOOKEEPER_SERVERS: zookeeper1:22888:23888;zookeeper2:32888:33888;zookeeper3:42888:43888
    ports:
      - "22181:22181"
      - "32888:32888" # 주키퍼 서버들이 이 서버와 통신할 떄 사용하는 포트
      - "33888:33888" # 리더를 선출하는 포트 주키퍼 앙상블 내에서 리더가 선출될 때 이 포트를 사용하여 통신
    volumes:
      - ./test/zookeeper/data/2:/zookeeper/data
  zookeeper-3: # 서비스 이름. service 하위에 작성하면 해당 이름으로 동작
    image: wurstmeister/zookeeper # 도커 이미지
    hostname: zookeeper3
    container_name: zookeeper3
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_DATA_DIR: /data/zookeeper/data
      ZOOKEEPER_SERVERS: zookeeper1:22888:23888;zookeeper2:32888:33888;zookeeper3:42888:43888
    ports:
      - "32181:32181"
      - "42888:42888"
      - "43888:43888"
    volumes:
      - ./test/zookeeper/data/3:/zookeeper/data
  kafka-1:
    image: wurstmeister/kafka
    container_name: kafka1
    hostname: kafka1
    ports: # 외부포트:컨테이너내부포트
      - "19092:19092"
    environment: # kafka 브로터를 위한 환경 변수 지정
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:12181,zookeeper2:22181,zookeeper3:32181 # kafka가 zookeeper에 커넥션하기 위한 대상을 지정
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://127.0.0.1:19092
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    volumes:
      - ./test/kafka/kafka1:/kafka1
    restart: always
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
  kafka-2:
    image: wurstmeister/kafka
    container_name: kafka2
    hostname: kafka2
    ports: # 외부포트:컨테이너내부포트
      - "29093:29093"
    environment: # kafka 브로터를 위한 환경 변수 지정
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:12181,zookeeper2:22181,zookeeper3:32181 # kafka가 zookeeper에 커넥션하기 위한 대상을 지정
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093,PLAINTEXT_HOST://127.0.0.1:29093
      KAFKA_LISTENERS: PLAINTEXT://:9093,PLAINTEXT_HOST://:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    volumes:
      - ./test/kafka/kafka2:/kafka2
    restart: always
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
  kafka-3:
    image: wurstmeister/kafka
    container_name: kafka3
    hostname: kafka3
    ports: # 외부포트:컨테이너내부포트
      - "39094:39094"
    environment: # kafka 브로터를 위한 환경 변수 지정
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookee1:12181,zookeeper2:22181,zookeeper3:32181 # kafka가 zookeeper에 커넥션하기 위한 대상을 지정
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094,PLAINTEXT_HOST://127.0.0.1:39094
      KAFKA_LISTENERS: PLAINTEXT://:9094,PLAINTEXT_HOST://:39094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    volumes:
      - ./test/kafka/kafka3:/kafka3
    restart: always
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
  kafka-ui:
    # 사용할 이미지
    image: provectuslabs/kafka-ui
    # 컨테이너명 설정
    container_name: kafka-ui
    # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
    ports:
      - "8089:8080"
    # 환경 변수 설정
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092,kafka2:9093,kafka3:9094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper1:12181,zookeeper2:22181,zookeeper3:32181
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
